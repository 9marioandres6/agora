rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow authenticated users to read and write posts
    match /posts/{postId} {
      allow read, write: if request.auth != null;
    }
    
    // Allow authenticated users to read and write their own user data
    match /users/{userId} {
      // Users can read all user profiles for search functionality
      allow read: if request.auth != null;
      // Users can only write to their own profile
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Projects collection rules
    match /projects/{projectId} {
      // Allow read access to all projects for authenticated users
      // This enables the filtering system to work properly
      allow read: if request.auth != null;
      
      // Allow create access to authenticated users
      allow create: if request.auth != null;
      
      // Allow update access for specific fields that all users should be able to modify
      allow update: if request.auth != null && (
        // Users can update support/oppose arrays (add/remove themselves)
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['supports', 'opposes', 'comments', 'collaborationRequests']) ||
        // Project creators and collaborators can update all fields
        request.auth.uid == resource.data.createdBy ||
        request.auth.uid in resource.data.collaborators
      );
      
      // Allow delete access only to project creator
      allow delete: if request.auth != null && request.auth.uid == resource.data.createdBy;
    }
  
  // Messages collection rules
  match /messages/{messageId} {
    // Allow users to read messages sent to them
    allow read: if request.auth != null && request.auth.uid == resource.data.recipientUid;
    
    // Allow users to create messages (send to others)
    allow create: if request.auth != null && request.auth.uid == request.resource.data.senderUid;
    
    // Allow users to update their own messages (mark as read, delete)
    allow update: if request.auth != null && request.auth.uid == resource.data.recipientUid;
    
    // Allow users to delete messages sent to them
    allow delete: if request.auth != null && request.auth.uid == resource.data.recipientUid;
  }
  
  // Deny all other requests
  match /{document=**} {
    allow read, write: if false;
  }
  }
}
